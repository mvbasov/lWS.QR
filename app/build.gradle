apply plugin: 'com.android.application'

android {

    namespace "net.basov.lws.qr"

    def last_tag = getGitRevParseInfo("describe --tags --abbrev=0")
    def commit_count = getGitRevParseInfo("rev-list --count ${last_tag}..")
    def current_commit = getGitRevParseInfo("rev-parse --short")

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "lWS.QR.${variant.versionName}.apk"
            if (variant.getBuildType().isMinifyEnabled()) {
                variant.assemble.doLast{
                    copy {
                        from variant.mappingFile
                        into output.outputFile.parent
                        rename { String fileName ->
                            "lWS.QR.${variant.versionName}_mapping.txt"
                        }
                    }
                }
            }
        }

    }


    compileSdkVersion 34


    defaultConfig {
// Keep two lines arround applicationId unchanged to allow use patch for F-Droid build

    
        applicationId "net.basov.lws.qr"
    

// End of strings reserved for F-Droid patch
        minSdkVersion 16
        targetSdkVersion 34
        versionCode 40000
        versionName "04.00.00"
    }

    buildFeatures {
        flavorDimensions += "version"
    }
    productFlavors {
        gpm {
            dimension "version"
            applicationIdSuffix ".gpm"
        }
        fdroid {
            dimension "version"
            applicationIdSuffix ".fdroid"
        }
    }

    buildTypes {
       release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            zipAlignEnabled true
            versionNameSuffix "r-g" + current_commit
        }
        beta {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            versionNameSuffix "b-g" + current_commit
            debuggable false
        }
        debug {
            debuggable true
            versionNameSuffix 'a-' + commit_count + "-g" + current_commit
            signingConfig signingConfigs.debug
        }
    }
    lint {
        disable 'SetJavaScriptEnabled', 'GoogleAppIndexingWarning'
    }
}

task makeJS(type: Exec) {
    inputs.file file("QR-Code-generator/javascript/qrcodegen.js")
    //outputs.dir("src/main/assets")
    outputs.file file("src/main/assets/qrcodegen.min.js")

    commandLine 'sh', '-c', 'uglifyjs --comments \'/\\*[^\\0]+?Copyright[^\\0]+?\\*/\' -o src/main/assets/qrcodegen.min.js QR-Code-generator/javascript/qrcodegen.js'
    println "Create minifyed qrcodegen.js"
}

preBuild.dependsOn('makeJS')

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
}

static def getGitRevParseInfo (what) {
    def cmd = "git " + what + " HEAD"
    def proc = cmd.execute ()
    proc.text.trim ()
}
